{"version":3,"sources":["services/persons.js","components/Filter.js","components/Form.js","components/List.js","components/Notification.js","App.js","index.js"],"names":["baseURL","requests","getAll","axios","get","then","response","data","create","newPerson","post","update","id","updatedPerson","put","remove","delete","Filter","search","handleFilter","value","onChange","FormName","name","handleNameChange","FormNumber","number","handleNumberChange","FormButton","type","PersonForm","addPerson","onSubmit","Person","person","handleDelete","DeleteButton","onClick","List","persons","map","Notification","messageStyle","feedback","error","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","message","App","useState","setPersons","setName","setNumber","setSearch","searchResult","setSearchResult","setFeedback","useEffect","phonebookServices","initialPersons","feedbackContent","setTimeout","event","personToDelete","target","window","confirm","filter","catch","sameName","nameInput","same","forEach","toUpperCase","duplicateAlert","duplicatePerson","updateNumber","clearNameAndNumber","updatePerson","personToUpdate","find","p","changedPerson","returnedPerson","emptyName","alert","emptyNumber","query","result","includes","Form","preventDefault","personObject","newPersons","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fea6eee.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// const baseURL = \"http://localhost:3001/persons\";\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseURL).then((response) => response.data);\n};\n\nconst create = (newPerson) => {\n  return axios.post(baseURL, newPerson).then((response) => response.data);\n};\n\nconst update = (id, updatedPerson) => {\n  return axios\n    .put(`${baseURL}/${id}`, updatedPerson)\n    .then((response) => response.data);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseURL}/${id}`).then((response) => response);\n};\n\nconst requests = { getAll, create, update, remove };\n\nexport default requests;\n","import React from \"react\";\n\nconst Filter = ({ search, handleFilter }) => (\n  <div>\n    filter shown with <input value={search} onChange={handleFilter} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  addPerson,\n  handleNameChange,\n  handleNumberChange,\n  name,\n  number,\n}) => (\n  <form onSubmit={addPerson}>\n    <FormName name={name} handleNameChange={handleNameChange} />\n    <FormNumber number={number} handleNumberChange={handleNumberChange} />\n    <FormButton />\n  </form>\n);\n\nconst FormName = ({ name, handleNameChange }) => (\n  <div>\n    name: <input value={name} onChange={handleNameChange} />\n  </div>\n);\n\nconst FormNumber = ({ number, handleNumberChange }) => (\n  <div>\n    number: <input value={number} onChange={handleNumberChange} />\n  </div>\n);\n\nconst FormButton = () => (\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst List = ({ persons, handleDelete }) => {\n  return persons.map((person) => (\n    <Person key={person.name} person={person} handleDelete={handleDelete} />\n  ));\n};\n\nconst Person = ({ person, handleDelete }) => (\n  <p>\n    {person.name} {person.number}\n    <DeleteButton\n      id={person.id}\n      name={person.name}\n      handleDelete={handleDelete}\n    />\n  </p>\n);\n\nconst DeleteButton = ({ id, name, handleDelete }) => (\n  <button id={id} value={name} onClick={handleDelete}>\n    delete\n  </button>\n);\n\nexport default List;\n","import React from \"react\";\n\nconst Notification = ({feedback}) => {\n  if (feedback === null) {\n    return null;\n  }\n\n  let messageStyle;\n\n  const successStyle = {\n    color: \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n  const errorStyle = {\n    color: \"red\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  feedback.error ? (messageStyle = errorStyle) : (messageStyle = successStyle);\n\n  return <div style={messageStyle}>{feedback.message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport phonebookServices from \"./services/persons.js\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [feedback, setFeedback] = useState(null);\n\n  useEffect(() => {\n    phonebookServices\n      .getAll()\n      .then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  const feedbackContent = ( message, error=false ) => {\n    setFeedback({ message, error });\n    setTimeout(() => {\n      setFeedback(null)\n    }, 5000)\n  };\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value);\n    setNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    let query = event.target.value;\n    setSearch(query);\n    let result = persons.filter((person) =>\n      person.name.toUpperCase().includes(query.toUpperCase())\n    );\n    setSearchResult(result);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (!name) {\n      emptyName();\n    } else if (!number) {\n      emptyNumber();\n    } else {\n      const personObject = {\n        name: name,\n        number: number,\n      };\n      sameName(name)\n        ? duplicateAlert(personObject)\n        : phonebookServices\n            .create(personObject)\n            .then((newPersons) => {\n              setPersons(newPersons);\n              feedbackContent(`Added ${personObject.name}`);\n              clearNameAndNumber();\n            })\n            .catch((error) => {\n              feedbackContent(`Error: did not add ${personObject.name}`, true)\n            })\n    }\n  };\n\n  const handleDelete = (event) => {\n    let personToDelete = event.target.value;\n    let deletion = window.confirm(`Delete ${personToDelete} ?`);\n\n    if (deletion) {\n      phonebookServices.remove(event.target.id)\n      .then(() => {\n        setPersons(\n          persons.filter((person) => person.name !== personToDelete)\n        )\n        feedbackContent(`Deleted ${personToDelete}`)\n      })\n      .catch((error) => {\n        setPersons(\n          persons.filter((person) => person.name !== event.target.value)\n        )\n        feedbackContent(`Error: information for ${event.target.value} had already been deleted`, true)\n      });\n    }\n  };\n\n  const sameName = (nameInput) => {\n    let same = false;\n    persons.forEach((person) => {\n      if (nameInput.toUpperCase() === person.name.toUpperCase()) {\n        same = true;\n      }\n    });\n    return same;\n  };\n\n  const duplicateAlert = (duplicatePerson) => {\n    let replace = window.confirm(\n      `${duplicatePerson.name} is already added to phonebook, replace the old number with a new one?`\n    );\n    if (replace) {\n      updateNumber(duplicatePerson);\n    }\n    clearNameAndNumber();\n  };\n\n  const updateNumber = (updatePerson) => {\n    let personToUpdate = persons.find(\n      (p) => p.name.toUpperCase() === updatePerson.name.toUpperCase()\n    );\n    let changedPerson = { ...personToUpdate, number: updatePerson.number };\n\n    phonebookServices\n      .update(changedPerson.id, changedPerson)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((p) => (p.id === returnedPerson.id ? returnedPerson : p))\n        );\n        feedbackContent(`Changed number for ${changedPerson.name}`);\n      })\n      .catch((error) => {\n        setPersons(\n          persons.filter((p) => (p.name !== changedPerson.name))\n        );\n        feedbackContent(`Error: information for ${name} has already been removed from server`, true);\n      });\n  };\n\n  const emptyName = () => alert(\"Please enter a name\");\n  const emptyNumber = () => alert(\"Please enter a number\");\n  const clearNameAndNumber = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification feedback={feedback} />\n      <Filter search={search} handleFilter={handleFilter} />\n      <h3>Add a new</h3>\n      <Form\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        name={name}\n        number={number}\n      />\n      <h3>Numbers</h3>\n      {search ? (\n        <List persons={searchResult} handleDelete={handleDelete} />\n      ) : (\n        <List persons={persons} handleDelete={handleDelete} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}